
def augmented(query, docs_retrieval):
    # ดึงข้อมูลจาก docs_retrieval
    retrieved_docs = docs_retrieval.get("data", [])
    
    # สร้างบริบทจากเอกสารที่ได้รับ
    context = ""
    if retrieved_docs:
        context += "ตำราโบราณเปิดออก... เสียงกระซิบจากหน้ากระดาษเล่าเรื่องราวต่อไปนี้...\n\n"
        
        for i, doc in enumerate(retrieved_docs, 1):
            creature_name = doc["metadata"].get("Name", "สัตว์มหัศจรรย์ลึกลับ")
            context += f"บันทึกลับของ {creature_name}\n{doc['content']}\n\n"
            
            # # เพิ่มความน่าสนใจหลังจากแต่ละบันทึก
            # magic_insights = [
            #     "เสียงกระซิบจากนักเรียนฮอกวอตส์ว่าได้เห็นสัตว์ชนิดนี้ในป่าต้องห้าม...",
            #     "มีตำนานโบราณกล่าวว่าสัตว์ชนิดนี้มีพลังวิเศษที่ยังไม่ถูกค้นพบ...",
            #     "ลือกันว่ามีพ่อมดคนหนึ่งเคยเลี้ยงสัตว์ชนิดนี้และค้นพบความลับที่น่าทึ่ง...",
            #     "คำเตือนจากผู้ศึกษาสัตว์วิเศษ: ความรู้เกี่ยวกับสัตว์นี้อาจไม่สมบูรณ์..."
            # ]
            # import random
            # context += f"{random.choice(magic_insights)}\n\n"
    
    # สร้าง prompt ในรูปแบบที่น่าตื่นเต้นสำหรับ LLM
    prompt = f"""
คำถามจากนักเรียนผู้กล้าหาญ:
"{query}"

{context}

คำปรึกษาจากที่ปรึกษาแห่งกระทรวงเวทมนตร์
- ตอบคำถามโดยใช้ความรู้เฉพาะจากตำราที่เปิดออกเท่านั้น
- โปรดใช้ข้อมูลที่มีอยู่ในอันดับแรกของเอกสารที่ดึงมาในการคิดคำตอบก่อน ถ้าไม่พบข้อมูลที่ตรงตามคำถามให้ใช้ข้อมูลจากเอกสารอันดับต่อเป็นข้อมูลสำรอง
- คำตอบควรมีความถูกต้อง ความกระชับและชัดเจน และไม่ยาวเกินไป ไม่เกิน 100 คำ
- หากไม่มีสัตว์ที่ตรงตามความต้องการทั้งหมด ให้แนะนำตัวที่ใกล้เคียงที่สุดและเหตุผล

คำตอบจากผู้พิทักษ์ความลับแห่งสัตว์มหัศจรรย์:"""
    
    return {"data": prompt}
   